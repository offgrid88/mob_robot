[1/10] Performing build step for 'bootloader'
[1/1] cd /home/offgrid8/mob_robot/build/bootloader/esp-idf/esptool_py && /home/offgrid8/.espressif/python_env/idf5.1_py3.11_env/bin/python /home/offgrid8/esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/offgrid8/mob_robot/build/bootloader/bootloader.bin
Bootloader binary size 0x6730 bytes. 0x8d0 bytes (8%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/mcpwm_bdc_control_example_main.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable mcpwm_brushed_dc_control.elf
[8/10] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/offgrid8/mob_robot/build/mcpwm_brushed_dc_control.bin
[9/10] cd /home/offgrid8/mob_robot/build/esp-idf/esptool_py && /home/offgrid8/.espressif/python_env/idf5.1_py3.11_env/bin/python /home/offgrid8/esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/offgrid8/mob_robot/build/partition_table/partition-table.bin /home/offgrid8/mob_robot/build/mcpwm_brushed_dc_control.bin
mcpwm_brushed_dc_control.bin binary size 0x324f0 bytes. Smallest app partition is 0x100000 bytes. 0xcdb10 bytes (80%) free.
[9/10] cd /home/offgrid8/esp32/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/offgrid8/esp32/esp-idf -D "SERIAL_TOOL=/home/offgrid8/.espressif/python_env/idf5.1_py3.11_env/bin/python;;/home/offgrid8/esp32/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/offgrid8/mob_robot/build -P /home/offgrid8/esp32/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 mcpwm_brushed_dc_control.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.6.2
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 0c:b8:15:f3:28:5c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00042fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26416 bytes to 16490...
Writing at 0x00001000... (50 %)
Writing at 0x000076a1... (100 %)
Wrote 26416 bytes (16490 compressed) at 0x00001000 in 0.9 seconds (effective 240.6 kbit/s)...
Hash of data verified.
Compressed 206064 bytes to 112757...
Writing at 0x00010000... (14 %)
Writing at 0x0001d5d1... (28 %)
Writing at 0x000230d9... (42 %)
Writing at 0x000290df... (57 %)
Writing at 0x0002e99b... (71 %)
Writing at 0x000373c4... (85 %)
Writing at 0x0003d0d2... (100 %)
Wrote 206064 bytes (112757 compressed) at 0x00010000 in 2.7 seconds (effective 614.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 344.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
